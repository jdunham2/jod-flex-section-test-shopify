{% comment %} This file is auto-generated. Do not edit this file. {% endcomment %}
{% comment %} This file is auto-generated. Do not edit this file. {% endcomment %}
{% comment %}
  Hides the parent section based on user-defined conditions.

  Works with all page types:
   - products
   - pages
   - collections
   - blogs
   - articles
{% endcomment %}

{%- liquid
  assign visibility = block.settings.visibility
  assign match_rule = block.settings.match_rule
  assign key = block.settings.key
  assign match_condition = block.settings.match_condition
  assign value = block.settings.value
  assign persist = block.settings.persist

  # defaults
  assign matches = false
  assign unhide_later_with_js = false
-%}

{% case match_rule %}
  {% when 'tag' %}
    {%- liquid
      # Work with products, pages, collections, etc.
      assign page_type = request.page_type
      assign tags = [page_type].tags

      case match_condition
        when 'equals'
          if tags contains value
            assign matches = true
          endif
        when 'not_equals'
          unless tags contains value
            assign matches = true
          endunless
        when 'contains'
          for tag in tags
            assign tag_lower = tag | downcase
            if tag_lower contains value
              assign matches = true
            endif
          endfor
        when 'not_contains'
          for tag in tags
            assign tag_lower = tag | downcase
            unless tag_lower contains value
              assign matches = true
            endunless
          endfor
      endcase
    -%}

  {% when 'title', 'template' %}
    {%- liquid
      # Work with products, pages, collections, etc.
      assign page_type = request.page_type
      assign title = [page_type].title
      if match_rule == 'template'
        assign title = template.suffix
      endif
      assign title = title | downcase

      case match_condition
        when 'equals'
          if title == value
            assign matches = true
          endif
        when 'not_equals'
          if title != value
            assign matches = true
          endif
        when 'contains'
          if title contains value
            assign matches = true
          endif
        when 'not_contains'
          unless title contains value
            assign matches = true
          endunless
      endcase
      if title == blank
        assign matches = false
      endif
    -%}

  {% when 'url_param' %}
    {% assign unhide_later_with_js = true %}
    <script>
      (function () {
          const matchRule = '{{ match_condition }}';
          let matches = false;
          const currentValue = new URLSearchParams(window.location.search).get('{{ key }}') || sessionStorage.getItem('{{ key }}');

          if ({{ persist }} === true) {
              sessionStorage.setItem('{{ key }}', currentValue);
              if (sessionStorage.getItem('{{ key }}') != null) {
                  // update the value in the url
                  const url = new URL(window.location.href);
                  url.searchParams.set('{{ key }}', currentValue);
                  window.history.replaceState({}, '', url);
              }
          }

          switch (matchRule) {
              case 'equals': {
                  if (currentValue === '{{ value }}') {
                      matches = true;
                  }
                  break;
              }
              case 'not_equals': {
                  if (currentValue !== '{{ value }}') {
                      matches = true;
                  }
                  break;
              }
              case 'contains': {
                  if (currentValue.includes('{{ value }}')) {
                      matches = true;
                  }
                  break;
              }
              case 'not_contains': {
                  if (!currentValue.includes('{{ value }}')) {
                      matches = true;
                  }
                  break;
              }
          }

          const visibility = '{{ visibility }}';
          if (visibility === 'show' && matches === true) {
              document.getElementById('shopify-section-{{ section.id }}').style.display = 'block';
          } else if (visibility === 'hide' && matches === false) {
              document.getElementById('shopify-section-{{ section.id }}').style.display = 'none';
          }
          console.log({ matches, currentValue });
      })();
    </script>
{% endcase %}

<!--
  --------------------------------
      Initial Display to Avoid Flickering
  --------------------------------
-->
{%- liquid
  if visibility == 'hide' and matches == true
    assign display = 'none'
  elsif visibility == 'show' and matches == false
    assign display = 'none'
  elsif unhide_later_with_js == true
    assign display = 'none'
  else
    assign display = 'block'
  endif
-%}
<style>
  #shopify-section-{{  section.id }} {
      display: {{ display }};
  }
</style>

<!--
  --------------------------------
      DEBUG INFO
  --------------------------------
-->
{% if block.settings.debug %}
  <div class='ss-debug-section-visibility'>
    {% unless request.design_mode %}
      <style>
        .ss-debug-section-visibility {
          display: none;
        }
      </style>
    {% endunless %}
    <br>
    Section match rule: {{ match_rule }}
    <br>
    Key: {{ key }}
    <br>
    Match condition: {{ match_condition }}
    <br>
    Value: {{ value }}
    <br>
    Persist: {{ persist }}
  </div>
{% endif %}

{% schema %}
{
  "name": "Advanced Visibility 1-0",
  "settings": [
    {
      "type": "header",
      "content": "Section Visibility"
    },
    {
      "type": "paragraph",
      "content": "Advanced visibility allows you to show or hide the parent section based on the URL, tag, title, or template."
    },
    {
      "type": "select",
      "id": "visibility",
      "label": "Visibility",
      "options": [
        { "value": "show", "label": "Show" },
        { "value": "hide", "label": "Hide" }
      ],
      "default": "show"
    },
    {
      "type": "select",
      "id": "match_rule",
      "label": "Match Rule",
      "options": [
        { "value": "url_param", "label": "URL Parameter" },
        { "value": "tag", "label": "Tag" },
        { "value": "title", "label": "Title" },
        { "value": "template", "label": "Template" },
        { "value": "customer_tag", "label": "Customer Tag" }
      ],
      "default": "url_param",
      "info": "Tags and Title belong to the main page resource: product for product pages, article for articles, etc."
    },
    {
      "type": "text",
      "id": "key",
      "label": "URL Parameter",
      "info": "Only applies for URL Parameter"
    },
    {
      "type": "select",
      "id": "match_condition",
      "label": "Match When",
      "options": [
        {
          "value": "equals",
          "label": "Equal to"
        },
        {
          "value": "not_equals",
          "label": "Not equal to"
        },
        {
          "value": "contains",
          "label": "Contains"
        },
        {
          "value": "not_contains",
          "label": "Does not contain"
        },
        {
          "value": "empty",
          "label": "Is empty"
        },
        {
          "value": "not_empty",
          "label": "Is not empty"
        }
      ]
    },
    {
      "type": "text",
      "id": "value",
      "label": "Value"
    },
    {
      "type": "checkbox",
      "id": "persist",
      "label": "Remember for Current Session",
      "default": true,
      "info": "Only applies for URL Parameter. If checked, this rule will apply any time the user visits this page during their current session or until the parameter is changed."
    },
    {
      "type": "header",
      "content": "Debug"
    },
    {
      "type": "checkbox",
      "id": "debug",
      "label": "Display Values",
      "default": false,
      "info": "Displays values in the Customizer. On FE, values will be display none. FE must be used to test URL Parameters."
    }
  ]
}
{% endschema %}
