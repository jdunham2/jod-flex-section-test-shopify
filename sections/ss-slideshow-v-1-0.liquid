{% comment %} This file is auto-generated. Do not edit this file. {% endcomment %}
{% comment %} This file is auto-generated. Do not edit this file. {% endcomment %}
{{ 'ss-base-v-1-0.css' | asset_url | stylesheet_tag }}
{{ 'ss-global-tailwind-v-1-0.css' | asset_url | stylesheet_tag }}

{% stylesheet %}
  /* Slideshow */
  ss-slideshow-component {
    display: block;
    width: 100%;
  }

  /* Slides container */
  .ss-slideshow__slides {
    display: grid;
    overflow: hidden;
    width: 100%;
    grid-template-areas: 'slide';
  }

  .ss-slideshow--small .ss-slideshow__slides {
    min-height: 28rem;
  }

  .ss-slideshow--medium .ss-slideshow__slides {
    min-height: 34rem;
  }

  .ss-slideshow--large .ss-slideshow__slides {
    min-height: 39rem;
  }

  @media screen and (min-width: 750px) {
    .ss-slideshow--small .ss-slideshow__slides {
      min-height: 42rem;
    }

    .ss-slideshow--medium .ss-slideshow__slides {
      min-height: 56rem;
    }

    .ss-slideshow--large .ss-slideshow__slides {
      min-height: 72rem;
    }
  }

  /* Individual slides */
  .ss-slideshow__slide {
    display: flex;
    position: relative;
    grid-area: slide;
    justify-content: center;
    align-items: center;
    width: 100%;
  }

  ss-slideshow-component .ss-slideshow__slide {
    height: 100%;
  }

  .ss-slideshow__slide[aria-hidden='true'] {
    order: 0;
  }

  :is(.ss-slideshow__slide.ss-slide--next, .ss-slideshow__slide.ss-slide--previous) {
    order: 1;
    z-index: 1;
  }

  .ss-slideshow__slide[aria-hidden='false'] {
    order: 2;
    z-index: 2;
  }

  .ss-slide--transition-out-next,
  .ss-slide--transition-out-previous,
  .ss-slide--next,
  .ss-slide--previous {
    animation-duration: 0.5s;
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }

  .ss-slide--next,
  .ss-slide--previous {
    animation-fill-mode: forwards;
  }

  .ss-slide--transition-out-next {
    animation-name: ssSlideOutRight;
  }

  .ss-slide--transition-out-previous {
    animation-name: ssSlideOutLeft;
  }

  .ss-slideshow__slide.ss-slide--next {
    animation-name: ssSlideInLeft;
  }

  .ss-slideshow__slide.ss-slide--previous {
    animation-name: ssSlideInRight;
  }

  /* Slide content */
  .ss-slide__content {
    display: flex;
    position: relative;
    padding: 3.2rem;
    width: 100%;
    height: 100%;
  }

  .ss-slide__content > * {
    margin: auto;
    max-height: 100%;
  }

  .ss-slideshow__slide > .ss-slide__image-container {
    display: flex;
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: absolute;
  }

  .ss-slide__image-container svg {
    width: 100%;
  }

  .ss-slide__image-container img {
    object-fit: cover;
  }

  /* Slideshow controls */
  .ss-slideshow__controls {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ss-current-slide-indicator {
    display: flex;
    justify-content: center;
    min-width: 4.4rem;
    transition: transform 0.2s ease-in-out;
  }

  .ss-slideshow-controls__dot {
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    border: 0.1rem solid black;
    padding: 0;
    display: block;
    background-color: transparent;
  }

  :where(.ss-slideshow-controls__link--active) .ss-slideshow-controls__dot {
    background-color: rgba(var(--color-foreground), 1);
  }

  .ss-slideshow__controls .ss-button-secondary {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 1rem;
    border: none;
    min-height: 4.4rem;
    min-width: 4.4rem;
    color: rgb(var(--color-foreground));
  }

  .ss-slideshow-control .ss-icon {
    display: block;
    position: absolute;
    opacity: 1;
    transform: scale(1);
    transition:
      transform 150ms ease,
      opacity 150ms ease;
    width: 1.8rem;
    height: 1.2rem;
  }

  .ss-slideshow-controls__link {
    cursor: pointer;
    display: inline-block;
    border: none;
    color: rgba(var(--color-foreground), 0.5);
    box-shadow: none;
    background-color: transparent;
    font-size: 1.4rem;
    font-family: inherit;
    padding: 1.28rem;
  }

  :where(.ss-slideshow-controls__link--active).ss-slideshow-controls__link {
    color: rgba(var(--color-foreground), 1);
  }

  /* Autoplay */
  .ss-slideshow-control--autoplay {
    position: absolute;
    right: 0;
  }

  @media screen and (min-width: 750px) {
    .ss-slideshow-control--autoplay {
      position: inherit;
    }
  }

  .ss-slideshow-control--autoplay--paused .ss-icon-pause,
  .ss-slideshow-control--autoplay:not(.ss-slideshow-control--autoplay--paused) .ss-icon-play {
    visibility: hidden;
    opacity: 0;
    transform: scale(0.8);
  }

  /* Animation declarations */
  @keyframes ssSlideInLeft {
    from {
      transform: translateX(100%);
    }
    to {
      transform: translateX(0);
    }
  }

  @keyframes ssSlideOutRight {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-100%);
    }
  }

  @keyframes ssSlideInRight {
    from {
      transform: translateX(-100%);
    }
    to {
      transform: translateX(0);
    }
  }

  @keyframes ssSlideOutLeft {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(100%);
    }
  }
{% endstylesheet %}

{% javascript %}
  // Slideshow component
  class SlideshowComponent extends HTMLElement {
    constructor() {
      super();
      this.slides = this.querySelectorAll('.ss-slideshow__slide');
      if (this.slides.length <= 1) return;

      this.currentSlideIndicator = this.querySelector('.ss-current-slide-indicator');
      this.currentSlideIndex = this.dataset.activeSlide;
      this.counterControls = this.querySelectorAll('.ss-slideshow-controls__link');

      this.nextControl = this.querySelector('.ss-slideshow-control--next');
      this.previousControl = this.querySelector('.ss-slideshow-control--previous');

      if (this.getAttribute('data-autoplay') === 'true') {
        this.autoplaySpeed = parseInt(this.dataset.autoplaySpeed) * 1000;
        this.isAutoplayButtonSetToPlay = true;
        this.setAutoPlay();
      }

      this.initButtons();
    }

    initButtons() {
      this.nextControl.addEventListener('click', () => {
        this.updateSlideshow('next');
        this.resetAutoPlay();
      });

      this.previousControl.addEventListener('click', () => {
        this.updateSlideshow('previous');
        this.resetAutoPlay();
      });

      this.counterControls.forEach((control) => {
        control.addEventListener('click', () => {
          if (this.currentSlideIndex == control.dataset.slideNumber) return;
          this.updateSlideshow(control.dataset.slideNumber);
          this.resetAutoPlay();
        });
      });
    }

    updateSlideshow(target = 'next') {
      let nextSlideIndex = 0;
      let transitionDirection = target;

      switch (target) {
        case 'next':
          nextSlideIndex = parseInt(this.dataset.activeSlide) + 1;
          break;
        case 'previous':
          nextSlideIndex = parseInt(this.dataset.activeSlide) - 1;
          break;
        default:
          nextSlideIndex = target;
          transitionDirection = nextSlideIndex > this.dataset.activeSlide ? 'next' : 'previous';
          break;
      }

      if (nextSlideIndex < 0) {
        nextSlideIndex = this.slides.length - 1;
      } else if (nextSlideIndex >= this.slides.length) {
        nextSlideIndex = 0;
      }

      this.slideTransition(this.slides[this.dataset.activeSlide], this.slides[nextSlideIndex], transitionDirection);
      this.updateControls(nextSlideIndex);
      this.dataset.activeSlide = nextSlideIndex;
      this.currentSlideIndex = nextSlideIndex;
    }

    slideTransition(currentSlide, nextSlide, transitionDirection) {
      const slideshowControls = this.querySelectorAll('.ss-slideshow-control');
      slideshowControls.forEach((control) => {
        control.setAttribute('disabled', 'true');
      });

      currentSlide.addEventListener('animationend', (event) => {
        if (event.animationName.includes('ssSlideIn')) return;

        // Hide slides & reset transitions
        this.slides.forEach((slide) => {
          slide.setAttribute('aria-hidden', 'true');
          slide.classList.remove(`ss-slide--transition-out-${transitionDirection}`);
        });

        // Set new slide to active
        nextSlide.setAttribute('aria-hidden', 'false');
        nextSlide.classList.remove(`ss-slide--${transitionDirection}`);
        slideshowControls.forEach((control) => {
          control.removeAttribute('disabled');
        });
      });

      // Start slide transition
      currentSlide.classList.add(`ss-slide--transition-out-${transitionDirection}`);
      nextSlide.classList.add(`ss-slide--${transitionDirection}`);
    }

    updateControls(newSlideIndex) {
      // If we have a current slide indicator (i.e. 2/3), update it
      if (this.currentSlideIndicator) {
        this.currentSlideIndicator.innerText = `${newSlideIndex + 1}/${this.slides.length}`;
        return;
      }

      this.counterControls.forEach((control) => {
        control.classList.remove('ss-slideshow-controls__link--active');
      });
      this.counterControls[newSlideIndex].classList.add('ss-slideshow-controls__link--active');
    }

    resetAutoPlay() {
      if (this.isAutoplayButtonSetToPlay) {
        this.play();
      }
    }

    /* Handle autoplay */
    setAutoPlay() {
      this.addEventListener('mouseover', this.focusInHandling.bind(this));
      this.addEventListener('mouseleave', this.focusOutHandling.bind(this));
      this.addEventListener('focusin', this.focusInHandling.bind(this));
      this.addEventListener('focusout', this.focusOutHandling.bind(this));

      this.sliderAutoplayButton = this.querySelector('.ss-slideshow-control--autoplay');
      this.sliderAutoplayButton.addEventListener('click', this.autoPlayToggle.bind(this));
      this.isAutoplayButtonSetToPlay = true;
      this.play();
    }

    autoPlayToggle() {
      this.togglePlayButtonState(this.isAutoplayButtonSetToPlay);
      this.isAutoplayButtonSetToPlay ? this.pause() : this.play();
      this.isAutoplayButtonSetToPlay = !this.isAutoplayButtonSetToPlay;
    }

    togglePlayButtonState(pauseAutoplay) {
      this.sliderAutoplayButton.classList.toggle('ss-slideshow-control--autoplay--paused', pauseAutoplay);
      pauseAutoplay
        ? this.sliderAutoplayButton.setAttribute('aria-label', 'Play slideshow')
        : this.sliderAutoplayButton.setAttribute('aria-label', 'Pause slideshow');
    }

    play() {
      this.setAttribute('aria-live', 'off');
      clearInterval(this.autoplay);
      this.autoplay = setInterval(this.autoRotateSlides.bind(this), this.autoplaySpeed);
    }

    pause() {
      this.setAttribute('aria-live', 'polite');
      clearInterval(this.autoplay);
    }

    autoRotateSlides() {
      this.updateSlideshow('next');
    }

    focusOutHandling(event) {
      const focusedOnAutoplayButton =
        event.target === this.sliderAutoplayButton || this.sliderAutoplayButton.contains(event.target);

      if (this.isAutoplayButtonSetToPlay && !focusedOnAutoplayButton) this.play();
    }

    focusInHandling(event) {
      const focusedOnAutoplayButton =
        event.target === this.sliderAutoplayButton || this.sliderAutoplayButton.contains(event.target);

      if (this.isAutoplayButtonSetToPlay) {
        focusedOnAutoplayButton ? this.play() : this.pause();
      }
    }
  }

  if (!customElements.get('ss-slideshow-component')) {
    customElements.define('ss-slideshow-component', SlideshowComponent);
  }
{% endjavascript %}

<ss-slideshow-component
  id='slideshow-{{ section.id }}'
  class='ss-section ss-slideshow ss-slideshow--{{ section.settings.slide_height }}'
  data-active-slide='0'
  data-autoplay='{{ section.settings.autoplay }}'
  {% if section.settings.autoplay %}
    aria-live='polite'
    data-autoplay-speed='{{ section.settings.autoplay_speed }}'
  {% endif %}
>
  <div class='ss-slideshow__slides'>
    {% content_for 'blocks' %}
  </div>

  {% if section.blocks.size > 1 %}
    {% content_for 'block', type: 'ss-slideshow-controls-v-1-0', id: 'ss-slideshow-controls' %}
  {% endif %}
</ss-slideshow-component>

{% schema %}
{
  "name": "Slideshow 1-0",
  "class": "section--has-background ss-section",
  "blocks": [{ "type": "_ss-slide-v-1-0" }],
  "settings": [
    {
      "type": "header",
      "content": "Slideshow height"
    },
    {
      "type": "select",
      "id": "slide_height",
      "options": [
        {
          "value": "adapt_image",
          "label": "Adapt to first image"
        },
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "medium",
          "label": "Medium"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "medium",
      "label": "Slide height"
    },
    {
      "type": "header",
      "content": "Slideshow style"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "label": "Autoplay speed",
      "min": 3,
      "max": 7,
      "step": 1,
      "unit": "s",
      "default": 5
    }
  ],
  "presets": [
    {
      "name": "Slideshow 1-0",
      "blocks": [
        {
          "type": "_ss-slide-v-1-0",
          "blocks": [
            {
              "type": "ss-group-v-1-0",
              "settings": {
                "layout": {
                  "flex-direction": "column",
                  "justify-content": "flex-start"
                },
                "size": {
                  "width": "50%",
                  "flex-grow": "0",

                  "@media (--mobile)": {
                    "width": "100%"
                  }
                },
                "spacing": {
                  "padding": "50px",

                  "@media (--mobile)": {
                    "padding": "20px"
                  }
                }
              },
              "blocks": [
                {
                  "type": "ss-text-v-1-0",
                  "settings": {
                    "text": "<h1>Image slide</h1>"
                  }
                },
                {
                  "type": "ss-text-v-1-0",
                  "settings": {
                    "text": "<p>Tell your brand's story through images</p>"
                  }
                },
                {
                  "type": "ss-link-v-1-0",
                  "settings": {
                    "label": "Button label",
                    "spacing": {
                      "padding": "10px 30px"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "_ss-slide-v-1-0",
          "blocks": [
            {
              "type": "ss-group-v-1-0",
              "settings": {
                "layout": {
                  "flex-direction": "column",
                  "justify-content": "flex-start"
                },
                "size": {
                  "width": "50%",
                  "flex-grow": "0",

                  "@media (--mobile)": {
                    "width": "100%"
                  }
                },
                "spacing": {
                  "padding": "50px",

                  "@media (--mobile)": {
                    "padding": "20px"
                  }
                }
              },
              "blocks": [
                {
                  "type": "ss-text-v-1-0",
                  "settings": {
                    "text": "<h1>Image slide</h1>"
                  }
                },
                {
                  "type": "ss-text-v-1-0",
                  "settings": {
                    "text": "<p>Tell your brand's story through images</p>"
                  }
                },
                {
                  "type": "ss-link-v-1-0",
                  "settings": {
                    "label": "Button label",
                    "spacing": {
                      "padding": "10px 30px"
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
{% endschema %}
